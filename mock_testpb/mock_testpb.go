// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/afking/graphpb/testpb (interfaces: MessagingServer)

// Package mock_testpb is a generated GoMock package.
package mock_testpb

import (
	context "context"
	reflect "reflect"

	testpb "github.com/afking/graphpb/testpb"
	gomock "github.com/golang/mock/gomock"
)

// MockMessagingServer is a mock of MessagingServer interface
type MockMessagingServer struct {
	ctrl     *gomock.Controller
	recorder *MockMessagingServerMockRecorder
}

// MockMessagingServerMockRecorder is the mock recorder for MockMessagingServer
type MockMessagingServerMockRecorder struct {
	mock *MockMessagingServer
}

// NewMockMessagingServer creates a new mock instance
func NewMockMessagingServer(ctrl *gomock.Controller) *MockMessagingServer {
	mock := &MockMessagingServer{ctrl: ctrl}
	mock.recorder = &MockMessagingServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMessagingServer) EXPECT() *MockMessagingServerMockRecorder {
	return m.recorder
}

// GetMessageOne mocks base method
func (m *MockMessagingServer) GetMessageOne(arg0 context.Context, arg1 *testpb.GetMessageRequestOne) (*testpb.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageOne", arg0, arg1)
	ret0, _ := ret[0].(*testpb.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessageOne indicates an expected call of GetMessageOne
func (mr *MockMessagingServerMockRecorder) GetMessageOne(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageOne", reflect.TypeOf((*MockMessagingServer)(nil).GetMessageOne), arg0, arg1)
}

// GetMessageTwo mocks base method
func (m *MockMessagingServer) GetMessageTwo(arg0 context.Context, arg1 *testpb.GetMessageRequestTwo) (*testpb.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageTwo", arg0, arg1)
	ret0, _ := ret[0].(*testpb.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessageTwo indicates an expected call of GetMessageTwo
func (mr *MockMessagingServerMockRecorder) GetMessageTwo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageTwo", reflect.TypeOf((*MockMessagingServer)(nil).GetMessageTwo), arg0, arg1)
}

// UpdateMessage mocks base method
func (m *MockMessagingServer) UpdateMessage(arg0 context.Context, arg1 *testpb.UpdateMessageRequestOne) (*testpb.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMessage", arg0, arg1)
	ret0, _ := ret[0].(*testpb.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateMessage indicates an expected call of UpdateMessage
func (mr *MockMessagingServerMockRecorder) UpdateMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMessage", reflect.TypeOf((*MockMessagingServer)(nil).UpdateMessage), arg0, arg1)
}

// UpdateMessageBody mocks base method
func (m *MockMessagingServer) UpdateMessageBody(arg0 context.Context, arg1 *testpb.Message) (*testpb.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMessageBody", arg0, arg1)
	ret0, _ := ret[0].(*testpb.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateMessageBody indicates an expected call of UpdateMessageBody
func (mr *MockMessagingServerMockRecorder) UpdateMessageBody(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMessageBody", reflect.TypeOf((*MockMessagingServer)(nil).UpdateMessageBody), arg0, arg1)
}
